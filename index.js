// require('dotenv').config();

// const { Telegraf, Markup } = require('telegraf');
// const nodemailer    = require('nodemailer');

// const bot = new Telegraf(process.env.BOT_TOKEN);

// // SMTP‚Äë—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è Gmail
// const transporter = nodemailer.createTransport({
//   host:   'smtp.gmail.com',
//   port:   465,
//   secure: true,
//   auth: {
//     user: process.env.EMAIL_USER,
//     pass: process.env.EMAIL_PASS,
//   },
// });

// // –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–µ—Å—Å–∏–π –≤ –ø–∞–º—è—Ç–∏
// const sessions = {};

// // –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
// function startSession(ctx) {
//   const id = ctx.chat.id;
//   sessions[id] = { step: 'await_plate' };
//   ctx.reply(
//     'üëã –î–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º –ø—Ä–æ–ø—É—Å–∫.',
//     Markup.removeKeyboard()
//   );
//   ctx.reply(
//     '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –∞–≤—Ç–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´–ú–∞—Ä–∫–∞ x000xx00¬ª\n' +
//     '–ü—Ä–∏–º–µ—Ä: Toyota A123BC77'
//   );
// }

// // /start
// bot.start(ctx => startSession(ctx));

// // –ö–Ω–æ–ø–∫–∞ ¬´–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫¬ª
// bot.action('NEW_PASS', ctx => {
//   ctx.answerCbQuery();
//   startSession(ctx);
// });

// // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
// bot.on('text', async ctx => {
//   const id      = ctx.chat.id;
//   const txt     = ctx.message.text.trim();
//   const session = sessions[id];

//   // –ï—Å–ª–∏ –¥–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞—á–∞—Ç ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
//   if (!session) {
//     return ctx.reply(
//       '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫:',
//       Markup.inlineKeyboard([
//         Markup.button.callback('üìù –û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫', 'NEW_PASS')
//       ])
//     );
//   }

//   // –ñ–¥—ë–º –Ω–æ–º–µ—Ä –∞–≤—Ç–æ
//   if (session.step === 'await_plate') {
//     // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–µ–≥–∏–æ–Ω –∏–∑ 2 –∏–ª–∏ 3 —Ü–∏—Ñ—Ä
//     const plateRe = /^(\S+)\s+([A-Z–ê-–Ø]\d{3}[A-Z–ê-–Ø]{2}\d{2,3})$/iu;
//     const m       = txt.match(plateRe);
//     if (!m) {
//       return ctx.reply(
//         '‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞.\n' +
//         '–û—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ú–∞—Ä–∫–∞ x000xx00¬ª –∏–ª–∏ ¬´–ú–∞—Ä–∫–∞ x000xx000¬ª\n' +
//         '–ü—Ä–∏–º–µ—Ä: Toyota A123BC77 –∏–ª–∏ Toyota A123BC077'
//       );
//     }

//     const brand = m[1];
//     const plate = m[2].toUpperCase();

//     // –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
//     const date = new Date().toLocaleDateString('ru-RU', {
//       day:   '2-digit',
//       month: '2-digit',
//       year:  '2-digit'
//     });

//     // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–∏—Å—å–º–∞
//     const mailOpts = {
//       from:    `<${process.env.EMAIL_USER}>`,
//       to:      process.env.EMAIL_TO,
//       subject: '–û–û–û –°–ü–û–¢',
//       text:
// `–ü—Ä–æ—à—É –æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫ –Ω–∞ –≤—ä–µ–∑–¥ –Ω–∞ ${date} –¥–ª—è –û–û–û –°–ü–û–¢

// ${brand} ${plate}

// –≠–¥—É–∞—Ä–¥
// 89778959600`
//     };

//     try {
//       await transporter.sendMail(mailOpts);
//       await ctx.reply('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
//     } catch (err) {
//       console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞:', err);
//       await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
//     }

//     // –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É
//     delete sessions[id];
//     return ctx.reply(
//       '–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—Ä–æ–ø—É—Å–∫, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:',
//       Markup.inlineKeyboard([
//         Markup.button.callback('üìù –û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫', 'NEW_PASS')
//       ])
//     );
//   }
// });

// // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
// bot.launch()
//    .then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω'))
//    .catch(err => console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:', err));

require('dotenv').config();

const { Telegraf, Markup } = require('telegraf');
const nodemailer = require('nodemailer');

const bot = new Telegraf(process.env.BOT_TOKEN);

// SMTP‚Äë—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è Gmail
const transporter = nodemailer.createTransport({
  host: 'smtp.gmail.com',
  port: 465,
  secure: true,
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–µ—Å—Å–∏–π –≤ –ø–∞–º—è—Ç–∏
const sessions = {};

// –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
function startSession(ctx) {
  const id = ctx.chat.id;
  sessions[id] = { step: 'await_plate' };
  ctx.reply(
    'üëã –î–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º –ø—Ä–æ–ø—É—Å–∫.',
    Markup.removeKeyboard()
  );
  ctx.reply(
    '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä–æ–≤ –∞–≤—Ç–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´–ú–∞—Ä–∫–∞ x000xx00¬ª\n' +
    '–ö–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º.\n\n' +
    '–ü—Ä–∏–º–µ—Ä:\nToyota A123BC77\nHyundai B456DE78'
  );
}

// /start
bot.start(ctx => startSession(ctx));

// –ö–Ω–æ–ø–∫–∞ ¬´–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫¬ª
bot.action('NEW_PASS', ctx => {
  ctx.answerCbQuery();
  startSession(ctx);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async ctx => {
  const id = ctx.chat.id;
  const txt = ctx.message.text.trim();
  const session = sessions[id];

  // –ï—Å–ª–∏ –¥–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞—á–∞—Ç ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
  if (!session) {
    return ctx.reply(
      '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫:',
      Markup.inlineKeyboard([
        Markup.button.callback('üìù –û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫', 'NEW_PASS')
      ])
    );
  }

  // –ñ–¥—ë–º –Ω–æ–º–µ—Ä(–∞) –∞–≤—Ç–æ
  if (session.step === 'await_plate') {
    const plateRe = /^(\S+)\s+([A-Z–ê-–Ø]\d{3}[A-Z–ê-–Ø]{2}\d{2,3})$/iu;

    const lines = txt
      .split('\n')
      .map(line => line.trim())
      .filter(line => line.length > 0);

    const validEntries = [];
    const invalidEntries = [];

    for (const line of lines) {
      const m = line.match(plateRe);
      if (m) {
        const brand = m[1];
        const plate = m[2].toUpperCase();
        validEntries.push(`${brand} ${plate}`);
      } else {
        invalidEntries.push(line);
      }
    }

    if (validEntries.length === 0) {
      return ctx.reply(
        '‚ùó –ù–∏ –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.\n' +
        '–§–æ—Ä–º–∞—Ç: –ú–∞—Ä–∫–∞ A123BC77\n\n–ü—Ä–∏–º–µ—Ä:\nToyota A123BC77'
      );
    }

    const date = new Date().toLocaleDateString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: '2-digit'
    });

    const mailOpts = {
      from: `<${process.env.EMAIL_USER}>`,
      to: process.env.EMAIL_TO,
      subject: '–û–û–û –°–ü–û–¢',
      text:
`–ü—Ä–æ—à—É –æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫ –Ω–∞ –≤—ä–µ–∑–¥ –Ω–∞ ${date} –¥–ª—è –û–û–û –°–ü–û–¢

${validEntries.join('\n')}

–≠–¥—É–∞—Ä–¥
89778959600`
    };

    try {
      await transporter.sendMail(mailOpts);

      let reply = `‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ: ${validEntries.length}`;
      if (invalidEntries.length > 0) {
        reply += `\n‚ùå –ü—Ä–æ–ø—É—â–µ–Ω—ã —Å—Ç—Ä–æ–∫–∏:\n${invalidEntries.join('\n')}`;
      }
      await ctx.reply(reply);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞:', err);
      await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }

    // –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫—É
    delete sessions[id];
    return ctx.reply(
      '–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—Ä–æ–ø—É—Å–∫, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:',
      Markup.inlineKeyboard([
        Markup.button.callback('üìù –û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫', 'NEW_PASS')
      ])
    );
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch()
  .then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω'))
  .catch(err => console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:', err));
