require('dotenv').config();

const { Telegraf, Markup } = require('telegraf');
const nodemailer    = require('nodemailer');

const bot = new Telegraf(process.env.BOT_TOKEN);

// SMTP‚Äë—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è Gmail
const transporter = nodemailer.createTransport({
  host:   'smtp.gmail.com',
  port:   465,
  secure: true,
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–µ—Å—Å–∏–π –≤ –ø–∞–º—è—Ç–∏
const sessions = {};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
function startSession(ctx) {
  const id = ctx.chat.id;
  sessions[id] = { step: 'await_plate' };
  ctx.reply(
    'üëã –î–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º –ø—Ä–æ–ø—É—Å–∫.',
    Markup.removeKeyboard()
  );
  ctx.reply(
    '–®–∞–≥ 1Ô∏è‚É£: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –∞–≤—Ç–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´–ú–∞—Ä–∫–∞ x000xx00¬ª\n' +
    '–ü—Ä–∏–º–µ—Ä: Toyota A123BC77'
  );
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.start(ctx => {
  startSession(ctx);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫¬ª
bot.action('NEW_PASS', ctx => {
  ctx.answerCbQuery();        // —É–±–∏—Ä–∞–µ–º ¬´—á–∞—Å–∏–∫–∏¬ª
  startSession(ctx);          // –∑–∞–Ω–æ–≤–æ –∑–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–ª–æ–≥
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async ctx => {
  const id  = ctx.chat.id;
  const txt = ctx.message.text.trim();
  const session = sessions[id];

  // –ï—Å–ª–∏ —Å–µ—Å—Å–∏–∏ –Ω–µ—Ç ‚Äî –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É
  if (!session) {
    return ctx.reply(
      '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫:',
      Markup.inlineKeyboard([
        Markup.button.callback('üìù –û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫', 'NEW_PASS')
      ])
    );
  }

  // –®–∞–≥ 1: –∂–¥—ë–º –Ω–æ–º–µ—Ä –∞–≤—Ç–æ
  if (session.step === 'await_plate') {
    const plateRe = /^(\S+)\s+([A-Z–ê-–Ø]\d{3}[A-Z–ê-–Ø]{2}\d{2})$/iu;
    const m = txt.match(plateRe);
    if (!m) {
      return ctx.reply(
        '‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞.\n' +
        '–û—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ú–∞—Ä–∫–∞ x000xx00¬ª\n' +
        '–ü—Ä–∏–º–µ—Ä: Toyota A123BC77'
      );
    }
    session.brand = m[1];
    session.plate = m[2].toUpperCase();
    session.step  = 'await_date';
    return ctx.reply(
      '–û—Ç–ª–∏—á–Ω–æ! ‚úÖ\n' +
      '–®–∞–≥ 2Ô∏è‚É£: —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ø—Ä–æ–ø—É—Å–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YY\n' +
      '–ü—Ä–∏–º–µ—Ä: 22.07.25'
    );
  }

  // –®–∞–≥ 2: –∂–¥—ë–º –¥–∞—Ç—É
  if (session.step === 'await_date') {
    const dateRe = /^(\d{2}\.\d{2}\.\d{2})$/;
    const m = txt.match(dateRe);
    if (!m) {
      return ctx.reply(
        '‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã.\n' +
        '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –≤–∏–¥–µ DD.MM.YY\n' +
        '–ü—Ä–∏–º–µ—Ä: 22.07.25'
      );
    }
    session.date = m[1];

    // –°–æ–±–∏—Ä–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
    const mailOpts = {
      from:    `<${process.env.EMAIL_USER}>`,
      to:      `<${process.env.EMAIL_TO}>`,
      subject: '–û–û–û –°–ü–û–¢',
      text:
`–ü—Ä–æ—à—É –æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫ –Ω–∞ –≤—ä–µ–∑–¥ –Ω–∞ ${session.date} –¥–ª—è –û–û–û –°–ü–û–¢

${session.brand} ${session.plate}

–≠–¥—É–∞—Ä–¥
89778959600`
    };

    try {
      await transporter.sendMail(mailOpts);
      await ctx.reply('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞:', err);
      await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }

    // –£–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏
    delete sessions[id];
    return ctx.reply(
      '–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –ø—Ä–æ–ø—É—Å–∫, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:',
      Markup.inlineKeyboard([
        Markup.button.callback('üìù –û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫', 'NEW_PASS')
      ])
    );
  }
});

bot.launch()
   .then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω'))
   .catch(err => console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:', err));

// require('dotenv').config();

// const { Telegraf } = require('telegraf');
// const nodemailer    = require('nodemailer');

// const bot = new Telegraf(process.env.BOT_TOKEN);

// // SMTP‚Äë—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è mail.ru / bk.ru
// const transporter = nodemailer.createTransport({
//   host:   'smtp.gmail.com',
//   port:   465,
//   secure: true,
//   auth: {
//     user: process.env.EMAIL_USER,
//     pass: process.env.EMAIL_PASS,
//   },
// });

// // –í –ø–∞–º—è—Ç–∏ —Ö—Ä–∞–Ω–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞
// const sessions = {};

// // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
// bot.start(ctx => {
//   const id = ctx.chat.id;
//   sessions[id] = { step: 'await_plate' };
//   ctx.reply('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã\n–î–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º –ø—Ä–æ–ø—É—Å–∫.');
//   ctx.reply('–®–∞–≥ 1Ô∏è‚É£: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –∞–≤—Ç–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´–ú–∞—Ä–∫–∞ x000xx00¬ª\n–ü—Ä–∏–º–µ—Ä: Toyota A123BC77');
// });

// // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
// bot.on('text', async ctx => {
//   const id  = ctx.chat.id;
//   const txt = ctx.message.text.trim();
//   const session = sessions[id];

//   // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—á–∞–ª /start
//   if (!session) {
//     return ctx.reply('–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start');
//   }

//   // –®–∞–≥ 1: –∂–¥—ë–º –Ω–æ–º–µ—Ä –∞–≤—Ç–æ
//   if (session.step === 'await_plate') {
//     const plateRe = /^(\S+)\s+([A-Z–ê-–Ø]\d{3}[A-Z–ê-–Ø]{2}\d{2})$/iu;
//     const m = txt.match(plateRe);
//     if (!m) {
//       return ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞.\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ú–∞—Ä–∫–∞ x000xx00¬ª\n–ü—Ä–∏–º–µ—Ä: Toyota A123BC77');
//     }
//     session.brand = m[1];
//     session.plate = m[2].toUpperCase();
//     session.step  = 'await_date';
//     return ctx.reply(
//       '–û—Ç–ª–∏—á–Ω–æ! ‚úÖ\n' +
//       '–®–∞–≥ 2Ô∏è‚É£: —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ø—Ä–æ–ø—É—Å–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YY\n' +
//       '–ü—Ä–∏–º–µ—Ä: 22.07.25'
//     );
//   }

//   // –®–∞–≥ 2: –∂–¥—ë–º –¥–∞—Ç—É
//   if (session.step === 'await_date') {
//     const dateRe = /^(\d{2}\.\d{2}\.\d{2})$/;
//     const m = txt.match(dateRe);
//     if (!m) {
//       return ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã.\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –≤–∏–¥–µ DD.MM.YY\n–ü—Ä–∏–º–µ—Ä: 22.07.25');
//     }
//     session.date = m[1];

//     // –í—Å—ë –µ—Å—Ç—å ‚Äî —Å–æ–±–∏—Ä–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
//     const mailOpts = {
//       from:    `<${process.env.EMAIL_USER}>`,
//       to:      'semyonvb@gmail.com',
//       subject: '–û–û–û –°–ü–û–¢',
//       text:
// `–ü—Ä–æ—à—É –æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫ –Ω–∞ –≤—ä–µ–∑–¥ –Ω–∞ ${session.date} –¥–ª—è –û–û–û –°–ü–û–¢

// ${session.brand} ${session.plate}

// –≠–¥—É–∞—Ä–¥
// 89778959600`
//     };

//     try {
//       await transporter.sendMail(mailOpts);
//       await ctx.reply('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
//     } catch (err) {
//       console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞:', err);
//       await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
//     }

//     // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
//     delete sessions[id];
//     return;
//   }
// });

// bot.launch()
//    .then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω'))
//    .catch(err => console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:', err));


// require('dotenv').config();

// const { Telegraf } = require('telegraf');
// const nodemailer    = require('nodemailer');

// const bot = new Telegraf(process.env.BOT_TOKEN);

// // SMTP‚Äë—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è mail.ru / bk.ru
// const transporter = nodemailer.createTransport({
//   host:   'smtp.mail.ru',
//   port:   465,
//   secure: true,
//   auth: {
//     user: process.env.EMAIL_USER,
//     pass: process.env.EMAIL_PASS,
//   },
// });

// bot.on('text', async (ctx) => {
//   const txt = ctx.message.text.trim();
//   // –ñ–¥—ë–º: –î–∞—Ç–∞ DD.MM.YY + –ø—Ä–æ–±–µ–ª + –ú–∞—Ä–∫–∞ + –ø—Ä–æ–±–µ–ª + –Ω–æ–º–µ—Ä x000xx00
//   const re = /^(\d{2}\.\d{2}\.\d{2})\s+(\S+)\s+([A-Z–ê-–Ø]\d{3}[A-Z–ê-–Ø]{2}\d{2})$/iu;
//   const m  = txt.match(re);

//   if (!m) {
//     return ctx.reply(
//       '‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.\n' +
//       '–û—Ç–ø—Ä–∞–≤—å—Ç–µ: –î–∞—Ç–∞ DD.MM.YY –∏ ¬´–ú–∞—Ä–∫–∞ x000xx00¬ª —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n' +
//       '–ü—Ä–∏–º–µ—Ä: 22.07.25 Toyota A123BC77'
//     );
//   }

//   const [ , date, brand, plateRaw ] = m;
//   const plate = plateRaw.toUpperCase();

//   const mailOpts = {
//     from:    `"–û–û–û –°–ü–û–¢" <${process.env.EMAIL_USER}>`,
//     to:      'semyonvb@gmail.com',
//     subject: '–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–ø—É—Å–∫',
//     text:
// `–ü—Ä–æ—à—É –æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫ –Ω–∞ –≤—ä–µ–∑–¥ –Ω–∞ ${date} –¥–ª—è –û–û–û –°–ü–û–¢

// ${brand} ${plate}

// –≠–¥—É–∞—Ä–¥
// 89778959600`
//   };

//   try {
//     await transporter.sendMail(mailOpts);
//     await ctx.reply('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ pass@gintsvetmet.ru');
//   } catch (err) {
//     console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞:', err);
//     await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞');
//   }
// });

// bot.launch()
//    .then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω'))
//    .catch(err => console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:', err));
